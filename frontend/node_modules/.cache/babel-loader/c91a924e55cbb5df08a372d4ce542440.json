{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport PickersDay from '../PickersDay/PickersDay';\nimport { useUtils, useNow } from '../internal/pickers/hooks/useUtils';\nimport { DAY_SIZE, DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport SlideTransition from './PickersSlideTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst weeksContainerHeight = (DAY_SIZE + DAY_MARGIN * 4) * 6;\nconst PickersCalendarDayHeader = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\nconst PickersCalendarWeekDayLabel = styled(Typography, {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  width: 36,\n  height: 40,\n  margin: '0 2px',\n  textAlign: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: theme.palette.text.secondary\n}));\nconst PickersCalendarLoadingContainer = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: weeksContainerHeight\n});\nconst PickersCalendarSlideTransition = styled(SlideTransition, {\n  skipSx: true\n})({\n  minHeight: weeksContainerHeight\n});\nconst PickersCalendarWeekContainer = styled('div', {\n  skipSx: true\n})({\n  overflow: 'hidden'\n});\nconst PickersCalendarWeek = styled('div', {\n  skipSx: true\n})({\n  margin: `${DAY_MARGIN}px 0`,\n  display: 'flex',\n  justifyContent: 'center'\n});\n/**\n * @ignore - do not document.\n */\n\nfunction PickersCalendar(props) {\n  const {\n    allowSameDateSelection,\n    autoFocus,\n    onFocusedDayChange: changeFocusedDay,\n    className,\n    currentMonth,\n    date,\n    disableHighlightToday,\n    focusedDay,\n    isDateDisabled,\n    isMonthSwitchingAnimating,\n    loading,\n    onChange,\n    onMonthSwitchingAnimationEnd,\n    reduceAnimations,\n    renderDay,\n    renderLoading = () => _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    })),\n    showDaysOutsideCurrentMonth,\n    slideDirection,\n    TransitionProps\n  } = props;\n  const now = useNow();\n  const utils = useUtils();\n  const handleDaySelect = React.useCallback((day, isFinish = 'finish') => {\n    // TODO possibly buggy line figure out and add tests\n    const finalDate = Array.isArray(date) ? day : utils.mergeDateAndTime(day, date || now);\n    onChange(finalDate, isFinish);\n  }, [date, now, onChange, utils]);\n  const currentMonthNumber = utils.getMonth(currentMonth);\n  const selectedDates = (Array.isArray(date) ? date : [date]).filter(Boolean).map(selectedDateItem => selectedDateItem && utils.startOfDay(selectedDateItem)); // need a new ref whenever the `key` of the transition changes: https://reactcommunity.org/react-transition-group/transition#Transition-prop-nodeRef.\n\n  const transitionKey = currentMonthNumber; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const slideNodeRef = React.useMemo(() => /*#__PURE__*/React.createRef(), [transitionKey]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarDayHeader, {\n      children: utils.getWeekdays().map((day, i) => /*#__PURE__*/_jsx(PickersCalendarWeekDayLabel, {\n        \"aria-hidden\": true,\n        variant: \"caption\",\n        children: day.charAt(0).toUpperCase()\n      }, day + i.toString()))\n    }), loading ? /*#__PURE__*/_jsx(PickersCalendarLoadingContainer, {\n      children: renderLoading()\n    }) : /*#__PURE__*/_jsx(PickersCalendarSlideTransition, _extends({\n      transKey: transitionKey,\n      onExited: onMonthSwitchingAnimationEnd,\n      reduceAnimations: reduceAnimations,\n      slideDirection: slideDirection,\n      className: className\n    }, TransitionProps, {\n      nodeRef: slideNodeRef,\n      children: /*#__PURE__*/_jsx(PickersCalendarWeekContainer, {\n        ref: slideNodeRef,\n        role: \"grid\",\n        children: utils.getWeekArray(currentMonth).map(week => /*#__PURE__*/_jsx(PickersCalendarWeek, {\n          role: \"row\",\n          children: week.map(day => {\n            const pickersDayProps = {\n              key: day == null ? void 0 : day.toString(),\n              day,\n              isAnimating: isMonthSwitchingAnimating,\n              disabled: isDateDisabled(day),\n              allowSameDateSelection,\n              autoFocus: autoFocus && focusedDay !== null && utils.isSameDay(day, focusedDay),\n              today: utils.isSameDay(day, now),\n              outsideCurrentMonth: utils.getMonth(day) !== currentMonthNumber,\n              selected: selectedDates.some(selectedDate => selectedDate && utils.isSameDay(selectedDate, day)),\n              disableHighlightToday,\n              showDaysOutsideCurrentMonth,\n              onDayFocus: changeFocusedDay,\n              onDaySelect: handleDaySelect\n            };\n            return renderDay ? renderDay(day, selectedDates, pickersDayProps) : /*#__PURE__*/_jsx(\"div\", {\n              role: \"cell\",\n              children: /*#__PURE__*/_jsx(PickersDay, _extends({}, pickersDayProps))\n            }, pickersDayProps.key);\n          })\n        }, `week-${week[0]}`))\n      })\n    }))]\n  });\n}\n\nexport default PickersCalendar;","map":{"version":3,"sources":["/home/rgargvanshu/DASS_Project/frontend/node_modules/@mui/lab/CalendarPicker/PickersCalendar.js"],"names":["_extends","_span","React","Typography","styled","PickersDay","useUtils","useNow","DAY_SIZE","DAY_MARGIN","SlideTransition","jsx","_jsx","jsxs","_jsxs","weeksContainerHeight","PickersCalendarDayHeader","skipSx","display","justifyContent","alignItems","PickersCalendarWeekDayLabel","theme","width","height","margin","textAlign","color","palette","text","secondary","PickersCalendarLoadingContainer","minHeight","PickersCalendarSlideTransition","PickersCalendarWeekContainer","overflow","PickersCalendarWeek","PickersCalendar","props","allowSameDateSelection","autoFocus","onFocusedDayChange","changeFocusedDay","className","currentMonth","date","disableHighlightToday","focusedDay","isDateDisabled","isMonthSwitchingAnimating","loading","onChange","onMonthSwitchingAnimationEnd","reduceAnimations","renderDay","renderLoading","children","showDaysOutsideCurrentMonth","slideDirection","TransitionProps","now","utils","handleDaySelect","useCallback","day","isFinish","finalDate","Array","isArray","mergeDateAndTime","currentMonthNumber","getMonth","selectedDates","filter","Boolean","map","selectedDateItem","startOfDay","transitionKey","slideNodeRef","useMemo","createRef","Fragment","getWeekdays","i","variant","charAt","toUpperCase","toString","transKey","onExited","nodeRef","ref","role","getWeekArray","week","pickersDayProps","key","isAnimating","disabled","isSameDay","today","outsideCurrentMonth","selected","some","selectedDate","onDayFocus","onDaySelect"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nimport * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport { styled } from '@mui/material/styles';\nimport PickersDay from '../PickersDay/PickersDay';\nimport { useUtils, useNow } from '../internal/pickers/hooks/useUtils';\nimport { DAY_SIZE, DAY_MARGIN } from '../internal/pickers/constants/dimensions';\nimport SlideTransition from './PickersSlideTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst weeksContainerHeight = (DAY_SIZE + DAY_MARGIN * 4) * 6;\nconst PickersCalendarDayHeader = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n});\nconst PickersCalendarWeekDayLabel = styled(Typography, {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  width: 36,\n  height: 40,\n  margin: '0 2px',\n  textAlign: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  color: theme.palette.text.secondary\n}));\nconst PickersCalendarLoadingContainer = styled('div', {\n  skipSx: true\n})({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  minHeight: weeksContainerHeight\n});\nconst PickersCalendarSlideTransition = styled(SlideTransition, {\n  skipSx: true\n})({\n  minHeight: weeksContainerHeight\n});\nconst PickersCalendarWeekContainer = styled('div', {\n  skipSx: true\n})({\n  overflow: 'hidden'\n});\nconst PickersCalendarWeek = styled('div', {\n  skipSx: true\n})({\n  margin: `${DAY_MARGIN}px 0`,\n  display: 'flex',\n  justifyContent: 'center'\n});\n/**\n * @ignore - do not document.\n */\n\nfunction PickersCalendar(props) {\n  const {\n    allowSameDateSelection,\n    autoFocus,\n    onFocusedDayChange: changeFocusedDay,\n    className,\n    currentMonth,\n    date,\n    disableHighlightToday,\n    focusedDay,\n    isDateDisabled,\n    isMonthSwitchingAnimating,\n    loading,\n    onChange,\n    onMonthSwitchingAnimationEnd,\n    reduceAnimations,\n    renderDay,\n    renderLoading = () => _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n      children: \"...\"\n    })),\n    showDaysOutsideCurrentMonth,\n    slideDirection,\n    TransitionProps\n  } = props;\n  const now = useNow();\n  const utils = useUtils();\n  const handleDaySelect = React.useCallback((day, isFinish = 'finish') => {\n    // TODO possibly buggy line figure out and add tests\n    const finalDate = Array.isArray(date) ? day : utils.mergeDateAndTime(day, date || now);\n    onChange(finalDate, isFinish);\n  }, [date, now, onChange, utils]);\n  const currentMonthNumber = utils.getMonth(currentMonth);\n  const selectedDates = (Array.isArray(date) ? date : [date]).filter(Boolean).map(selectedDateItem => selectedDateItem && utils.startOfDay(selectedDateItem)); // need a new ref whenever the `key` of the transition changes: https://reactcommunity.org/react-transition-group/transition#Transition-prop-nodeRef.\n\n  const transitionKey = currentMonthNumber; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const slideNodeRef = React.useMemo(() => /*#__PURE__*/React.createRef(), [transitionKey]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(PickersCalendarDayHeader, {\n      children: utils.getWeekdays().map((day, i) => /*#__PURE__*/_jsx(PickersCalendarWeekDayLabel, {\n        \"aria-hidden\": true,\n        variant: \"caption\",\n        children: day.charAt(0).toUpperCase()\n      }, day + i.toString()))\n    }), loading ? /*#__PURE__*/_jsx(PickersCalendarLoadingContainer, {\n      children: renderLoading()\n    }) : /*#__PURE__*/_jsx(PickersCalendarSlideTransition, _extends({\n      transKey: transitionKey,\n      onExited: onMonthSwitchingAnimationEnd,\n      reduceAnimations: reduceAnimations,\n      slideDirection: slideDirection,\n      className: className\n    }, TransitionProps, {\n      nodeRef: slideNodeRef,\n      children: /*#__PURE__*/_jsx(PickersCalendarWeekContainer, {\n        ref: slideNodeRef,\n        role: \"grid\",\n        children: utils.getWeekArray(currentMonth).map(week => /*#__PURE__*/_jsx(PickersCalendarWeek, {\n          role: \"row\",\n          children: week.map(day => {\n            const pickersDayProps = {\n              key: day == null ? void 0 : day.toString(),\n              day,\n              isAnimating: isMonthSwitchingAnimating,\n              disabled: isDateDisabled(day),\n              allowSameDateSelection,\n              autoFocus: autoFocus && focusedDay !== null && utils.isSameDay(day, focusedDay),\n              today: utils.isSameDay(day, now),\n              outsideCurrentMonth: utils.getMonth(day) !== currentMonthNumber,\n              selected: selectedDates.some(selectedDate => selectedDate && utils.isSameDay(selectedDate, day)),\n              disableHighlightToday,\n              showDaysOutsideCurrentMonth,\n              onDayFocus: changeFocusedDay,\n              onDaySelect: handleDaySelect\n            };\n            return renderDay ? renderDay(day, selectedDates, pickersDayProps) : /*#__PURE__*/_jsx(\"div\", {\n              role: \"cell\",\n              children: /*#__PURE__*/_jsx(PickersDay, _extends({}, pickersDayProps))\n            }, pickersDayProps.key);\n          })\n        }, `week-${week[0]}`))\n      })\n    }))]\n  });\n}\n\nexport default PickersCalendar;"]},"metadata":{},"sourceType":"module"}