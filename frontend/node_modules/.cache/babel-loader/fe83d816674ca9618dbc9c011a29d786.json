{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled, useThemeProps as useThemProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport clsx from 'clsx';\nimport PickersYear from './PickersYear';\nimport { useUtils, useNow } from '../internal/pickers/hooks/useUtils';\nimport { findClosestEnabledDate } from '../internal/pickers/date-utils';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { getYearPickerUtilityClass } from './yearPickerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearPickerUtilityClass, classes);\n};\n\nconst YearPickerRoot = styled('div', {\n  name: 'MuiYearPicker',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  overflowY: 'auto',\n  height: '100%',\n  margin: '0 4px'\n});\nconst YearPicker = /*#__PURE__*/React.forwardRef(function YearPicker(inProps, ref) {\n  const props = useThemProps({\n    props: inProps,\n    name: 'MuiYearPicker'\n  });\n  const {\n    autoFocus,\n    className,\n    date,\n    disableFuture,\n    disablePast,\n    isDateDisabled,\n    maxDate,\n    minDate,\n    onChange,\n    onFocusedDayChange,\n    onYearChange,\n    shouldDisableYear\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const selectedDate = date || now;\n  const currentYear = utils.getYear(selectedDate);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef(null);\n  const [focusedYear, setFocusedYear] = React.useState(currentYear);\n\n  const handleYearSelection = (event, year, isFinish = 'finish') => {\n    const submitDate = newDate => {\n      onChange(newDate, isFinish);\n\n      if (onFocusedDayChange) {\n        onFocusedDayChange(newDate || now);\n      }\n\n      if (onYearChange) {\n        onYearChange(newDate);\n      }\n    };\n\n    const newDate = utils.setYear(selectedDate, year);\n\n    if (isDateDisabled(newDate)) {\n      const closestEnabledDate = findClosestEnabledDate({\n        utils,\n        date: newDate,\n        minDate,\n        maxDate,\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled\n      });\n      submitDate(closestEnabledDate || now);\n    } else {\n      submitDate(newDate);\n    }\n  };\n\n  const focusYear = React.useCallback(year => {\n    if (!isDateDisabled(utils.setYear(selectedDate, year))) {\n      setFocusedYear(year);\n    }\n  }, [selectedDate, isDateDisabled, utils]);\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n\n  const handleKeyDown = (event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        focusYear(year + yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        focusYear(year + (theme.direction === 'ltr' ? -1 : 1));\n        event.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        focusYear(year + (theme.direction === 'ltr' ? 1 : -1));\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsx(YearPickerRoot, {\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: utils.getYearRange(minDate, maxDate).map(year => {\n      const yearNumber = utils.getYear(year);\n      const selected = yearNumber === currentYear;\n      return /*#__PURE__*/_jsx(PickersYear, {\n        selected: selected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: autoFocus && yearNumber === focusedYear,\n        ref: selected ? selectedYearRef : undefined,\n        disabled: disablePast && utils.isBeforeYear(year, now) || disableFuture && utils.isAfterYear(year, now) || shouldDisableYear && shouldDisableYear(year),\n        children: utils.format(year, 'year')\n      }, utils.format(year, 'year'));\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? YearPicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  date: PropTypes.any,\n\n  /**\n   * @ignore\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  isDateDisabled: PropTypes.func.isRequired,\n\n  /**\n   * @ignore\n   */\n  maxDate: PropTypes.any.isRequired,\n\n  /**\n   * @ignore\n   */\n  minDate: PropTypes.any.isRequired,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * @ignore\n   */\n  onFocusedDayChange: PropTypes.func,\n\n  /**\n   * Callback firing on year change @DateIOType.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Date Picker](https://mui.com/components/date-picker/)\n *\n * API:\n *\n * - [YearPicker API](https://mui.com/api/year-picker/)\n */\n\nexport default YearPicker;","map":{"version":3,"sources":["/home/rgargvanshu/DASS_Project/frontend/node_modules/@mui/lab/YearPicker/YearPicker.js"],"names":["React","PropTypes","useTheme","styled","useThemeProps","useThemProps","unstable_composeClasses","composeClasses","clsx","PickersYear","useUtils","useNow","findClosestEnabledDate","WrapperVariantContext","getYearPickerUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","classes","slots","root","YearPickerRoot","name","slot","overridesResolver","props","styles","display","flexDirection","flexWrap","overflowY","height","margin","YearPicker","forwardRef","inProps","ref","autoFocus","className","date","disableFuture","disablePast","isDateDisabled","maxDate","minDate","onChange","onFocusedDayChange","onYearChange","shouldDisableYear","now","theme","utils","selectedDate","currentYear","getYear","wrapperVariant","useContext","selectedYearRef","useRef","focusedYear","setFocusedYear","useState","handleYearSelection","event","year","isFinish","submitDate","newDate","setYear","closestEnabledDate","Boolean","shouldDisableDate","focusYear","useCallback","yearsInRow","handleKeyDown","key","preventDefault","direction","children","getYearRange","map","yearNumber","selected","value","onClick","onKeyDown","undefined","disabled","isBeforeYear","isAfterYear","format","process","env","NODE_ENV","propTypes","bool","object","string","any","func","isRequired"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, styled, useThemeProps as useThemProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport clsx from 'clsx';\nimport PickersYear from './PickersYear';\nimport { useUtils, useNow } from '../internal/pickers/hooks/useUtils';\nimport { findClosestEnabledDate } from '../internal/pickers/date-utils';\nimport { WrapperVariantContext } from '../internal/pickers/wrappers/WrapperVariantContext';\nimport { getYearPickerUtilityClass } from './yearPickerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getYearPickerUtilityClass, classes);\n};\n\nconst YearPickerRoot = styled('div', {\n  name: 'MuiYearPicker',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  overflowY: 'auto',\n  height: '100%',\n  margin: '0 4px'\n});\nconst YearPicker = /*#__PURE__*/React.forwardRef(function YearPicker(inProps, ref) {\n  const props = useThemProps({\n    props: inProps,\n    name: 'MuiYearPicker'\n  });\n  const {\n    autoFocus,\n    className,\n    date,\n    disableFuture,\n    disablePast,\n    isDateDisabled,\n    maxDate,\n    minDate,\n    onChange,\n    onFocusedDayChange,\n    onYearChange,\n    shouldDisableYear\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const now = useNow();\n  const theme = useTheme();\n  const utils = useUtils();\n  const selectedDate = date || now;\n  const currentYear = utils.getYear(selectedDate);\n  const wrapperVariant = React.useContext(WrapperVariantContext);\n  const selectedYearRef = React.useRef(null);\n  const [focusedYear, setFocusedYear] = React.useState(currentYear);\n\n  const handleYearSelection = (event, year, isFinish = 'finish') => {\n    const submitDate = newDate => {\n      onChange(newDate, isFinish);\n\n      if (onFocusedDayChange) {\n        onFocusedDayChange(newDate || now);\n      }\n\n      if (onYearChange) {\n        onYearChange(newDate);\n      }\n    };\n\n    const newDate = utils.setYear(selectedDate, year);\n\n    if (isDateDisabled(newDate)) {\n      const closestEnabledDate = findClosestEnabledDate({\n        utils,\n        date: newDate,\n        minDate,\n        maxDate,\n        disablePast: Boolean(disablePast),\n        disableFuture: Boolean(disableFuture),\n        shouldDisableDate: isDateDisabled\n      });\n      submitDate(closestEnabledDate || now);\n    } else {\n      submitDate(newDate);\n    }\n  };\n\n  const focusYear = React.useCallback(year => {\n    if (!isDateDisabled(utils.setYear(selectedDate, year))) {\n      setFocusedYear(year);\n    }\n  }, [selectedDate, isDateDisabled, utils]);\n  const yearsInRow = wrapperVariant === 'desktop' ? 4 : 3;\n\n  const handleKeyDown = (event, year) => {\n    switch (event.key) {\n      case 'ArrowUp':\n        focusYear(year - yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowDown':\n        focusYear(year + yearsInRow);\n        event.preventDefault();\n        break;\n\n      case 'ArrowLeft':\n        focusYear(year + (theme.direction === 'ltr' ? -1 : 1));\n        event.preventDefault();\n        break;\n\n      case 'ArrowRight':\n        focusYear(year + (theme.direction === 'ltr' ? 1 : -1));\n        event.preventDefault();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsx(YearPickerRoot, {\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    children: utils.getYearRange(minDate, maxDate).map(year => {\n      const yearNumber = utils.getYear(year);\n      const selected = yearNumber === currentYear;\n      return /*#__PURE__*/_jsx(PickersYear, {\n        selected: selected,\n        value: yearNumber,\n        onClick: handleYearSelection,\n        onKeyDown: handleKeyDown,\n        autoFocus: autoFocus && yearNumber === focusedYear,\n        ref: selected ? selectedYearRef : undefined,\n        disabled: disablePast && utils.isBeforeYear(year, now) || disableFuture && utils.isAfterYear(year, now) || shouldDisableYear && shouldDisableYear(year),\n        children: utils.format(year, 'year')\n      }, utils.format(year, 'year'));\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? YearPicker.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  date: PropTypes.any,\n\n  /**\n   * @ignore\n   */\n  disableFuture: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disablePast: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  isDateDisabled: PropTypes.func.isRequired,\n\n  /**\n   * @ignore\n   */\n  maxDate: PropTypes.any.isRequired,\n\n  /**\n   * @ignore\n   */\n  minDate: PropTypes.any.isRequired,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func.isRequired,\n\n  /**\n   * @ignore\n   */\n  onFocusedDayChange: PropTypes.func,\n\n  /**\n   * Callback firing on year change @DateIOType.\n   */\n  onYearChange: PropTypes.func,\n\n  /**\n   * Disable specific years dynamically.\n   * Works like `shouldDisableDate` but for year selection view @DateIOType.\n   */\n  shouldDisableYear: PropTypes.func\n} : void 0;\n/**\n *\n * Demos:\n *\n * - [Date Picker](https://mui.com/components/date-picker/)\n *\n * API:\n *\n * - [YearPicker API](https://mui.com/api/year-picker/)\n */\n\nexport default YearPicker;"]},"metadata":{},"sourceType":"module"}