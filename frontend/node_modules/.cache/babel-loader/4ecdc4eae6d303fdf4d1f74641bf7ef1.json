{"ast":null,"code":"var _jsxFileName = \"/home/rgargvanshu/DASS_Project/frontend/src/ui-component/extended/Breadcrumbs.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Card, Divider, Grid, Typography } from '@mui/material';\nimport MuiBreadcrumbs from '@mui/material/Breadcrumbs'; // project imports\n\nimport config from 'config';\nimport { gridSpacing } from 'store/constant'; // assets\n\nimport { IconTallymark1 } from '@tabler/icons';\nimport AccountTreeTwoToneIcon from '@mui/icons-material/AccountTreeTwoTone';\nimport HomeIcon from '@mui/icons-material/Home';\nimport HomeTwoToneIcon from '@mui/icons-material/HomeTwoTone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst linkSX = {\n  display: 'flex',\n  color: 'grey.900',\n  textDecoration: 'none',\n  alignContent: 'center',\n  alignItems: 'center'\n}; // ==============================|| BREADCRUMBS ||============================== //\n\nconst Breadcrumbs = ({\n  card,\n  divider,\n  icon,\n  icons,\n  maxItems,\n  navigation,\n  rightAlign,\n  separator,\n  title,\n  titleBottom,\n  ...others\n}) => {\n  _s();\n\n  const theme = useTheme();\n  const iconStyle = {\n    marginRight: theme.spacing(0.75),\n    marginTop: `-${theme.spacing(0.25)}`,\n    width: '1rem',\n    height: '1rem',\n    color: theme.palette.secondary.main\n  };\n  const [main, setMain] = useState();\n  const [item, setItem] = useState(); // set active item state\n\n  const getCollapse = menu => {\n    if (menu.children) {\n      menu.children.filter(collapse => {\n        if (collapse.type && collapse.type === 'collapse') {\n          getCollapse(collapse);\n        } else if (collapse.type && collapse.type === 'item') {\n          if (document.location.pathname === config.basename + collapse.url) {\n            setMain(menu);\n            setItem(collapse);\n          }\n        }\n\n        return false;\n      });\n    }\n  };\n\n  useEffect(() => {\n    var _navigation$items;\n\n    navigation === null || navigation === void 0 ? void 0 : (_navigation$items = navigation.items) === null || _navigation$items === void 0 ? void 0 : _navigation$items.map(menu => {\n      if (menu.type && menu.type === 'group') {\n        getCollapse(menu);\n      }\n\n      return false;\n    });\n  }); // item separator\n\n  const SeparatorIcon = separator;\n  const separatorIcon = separator ? /*#__PURE__*/_jsxDEV(SeparatorIcon, {\n    stroke: 1.5,\n    size: \"1rem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 39\n  }, this) : /*#__PURE__*/_jsxDEV(IconTallymark1, {\n    stroke: 1.5,\n    size: \"1rem\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 84\n  }, this);\n  let mainContent;\n  let itemContent;\n\n  let breadcrumbContent = /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 29\n  }, this);\n\n  let itemTitle = '';\n  let CollapseIcon;\n  let ItemIcon; // collapse item\n\n  if (main && main.type === 'collapse') {\n    CollapseIcon = main.icon ? main.icon : AccountTreeTwoToneIcon;\n    mainContent = /*#__PURE__*/_jsxDEV(Typography, {\n      component: Link,\n      to: \"#\",\n      variant: \"subtitle1\",\n      sx: linkSX,\n      children: [icons && /*#__PURE__*/_jsxDEV(CollapseIcon, {\n        style: iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 27\n      }, this), main.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this);\n  } // items\n\n\n  if (item && item.type === 'item') {\n    itemTitle = item.title;\n    ItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon;\n    itemContent = /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      sx: {\n        display: 'flex',\n        textDecoration: 'none',\n        alignContent: 'center',\n        alignItems: 'center',\n        color: 'grey.500'\n      },\n      children: [icons && /*#__PURE__*/_jsxDEV(ItemIcon, {\n        style: iconStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }, this), itemTitle]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this); // main\n\n    if (item.breadcrumbs !== false) {\n      breadcrumbContent = /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          marginBottom: card === false ? 0 : theme.spacing(gridSpacing),\n          border: card === false ? 'none' : '1px solid',\n          borderColor: theme.palette.primary[200] + 75,\n          background: card === false ? 'transparent' : theme.palette.background.default\n        },\n        ...others,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 2,\n            pl: card === false ? 0 : 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: rightAlign ? 'row' : 'column',\n            justifyContent: rightAlign ? 'space-between' : 'flex-start',\n            alignItems: rightAlign ? 'center' : 'flex-start',\n            spacing: 1,\n            children: [title && !titleBottom && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(MuiBreadcrumbs, {\n                sx: {\n                  '& .MuiBreadcrumbs-separator': {\n                    width: 16,\n                    ml: 1.25,\n                    mr: 1.25\n                  }\n                },\n                \"aria-label\": \"breadcrumb\",\n                maxItems: maxItems || 8,\n                separator: separatorIcon,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  component: Link,\n                  to: \"/\",\n                  color: \"inherit\",\n                  variant: \"subtitle1\",\n                  sx: linkSX,\n                  children: [icons && /*#__PURE__*/_jsxDEV(HomeTwoToneIcon, {\n                    sx: iconStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 51\n                  }, this), icon && /*#__PURE__*/_jsxDEV(HomeIcon, {\n                    sx: { ...iconStyle,\n                      mr: 0\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 50\n                  }, this), !icon && 'Dashboard']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this), mainContent, itemContent]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), title && titleBottom && /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), card === false && divider !== false && /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            borderColor: theme.palette.primary.main,\n            mb: gridSpacing\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return breadcrumbContent;\n};\n\n_s(Breadcrumbs, \"zwxaixKc6m2zMxUMH3duzsxI8RU=\", false, function () {\n  return [useTheme];\n});\n\n_c = Breadcrumbs;\nBreadcrumbs.propTypes = {\n  card: PropTypes.bool,\n  divider: PropTypes.bool,\n  icon: PropTypes.bool,\n  icons: PropTypes.bool,\n  maxItems: PropTypes.number,\n  navigation: PropTypes.object,\n  rightAlign: PropTypes.bool,\n  separator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  title: PropTypes.bool,\n  titleBottom: PropTypes.bool\n};\nexport default Breadcrumbs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"sources":["/home/rgargvanshu/DASS_Project/frontend/src/ui-component/extended/Breadcrumbs.js"],"names":["PropTypes","useEffect","useState","Link","useTheme","Box","Card","Divider","Grid","Typography","MuiBreadcrumbs","config","gridSpacing","IconTallymark1","AccountTreeTwoToneIcon","HomeIcon","HomeTwoToneIcon","linkSX","display","color","textDecoration","alignContent","alignItems","Breadcrumbs","card","divider","icon","icons","maxItems","navigation","rightAlign","separator","title","titleBottom","others","theme","iconStyle","marginRight","spacing","marginTop","width","height","palette","secondary","main","setMain","item","setItem","getCollapse","menu","children","filter","collapse","type","document","location","pathname","basename","url","items","map","SeparatorIcon","separatorIcon","mainContent","itemContent","breadcrumbContent","itemTitle","CollapseIcon","ItemIcon","breadcrumbs","marginBottom","border","borderColor","primary","background","default","p","pl","fontWeight","ml","mr","mb","propTypes","bool","number","object","oneOfType","func"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Card, Divider, Grid, Typography } from '@mui/material';\nimport MuiBreadcrumbs from '@mui/material/Breadcrumbs';\n\n// project imports\nimport config from 'config';\nimport { gridSpacing } from 'store/constant';\n\n// assets\nimport { IconTallymark1 } from '@tabler/icons';\nimport AccountTreeTwoToneIcon from '@mui/icons-material/AccountTreeTwoTone';\nimport HomeIcon from '@mui/icons-material/Home';\nimport HomeTwoToneIcon from '@mui/icons-material/HomeTwoTone';\n\nconst linkSX = {\n    display: 'flex',\n    color: 'grey.900',\n    textDecoration: 'none',\n    alignContent: 'center',\n    alignItems: 'center'\n};\n\n// ==============================|| BREADCRUMBS ||============================== //\n\nconst Breadcrumbs = ({ card, divider, icon, icons, maxItems, navigation, rightAlign, separator, title, titleBottom, ...others }) => {\n    const theme = useTheme();\n\n    const iconStyle = {\n        marginRight: theme.spacing(0.75),\n        marginTop: `-${theme.spacing(0.25)}`,\n        width: '1rem',\n        height: '1rem',\n        color: theme.palette.secondary.main\n    };\n\n    const [main, setMain] = useState();\n    const [item, setItem] = useState();\n\n    // set active item state\n    const getCollapse = (menu) => {\n        if (menu.children) {\n            menu.children.filter((collapse) => {\n                if (collapse.type && collapse.type === 'collapse') {\n                    getCollapse(collapse);\n                } else if (collapse.type && collapse.type === 'item') {\n                    if (document.location.pathname === config.basename + collapse.url) {\n                        setMain(menu);\n                        setItem(collapse);\n                    }\n                }\n                return false;\n            });\n        }\n    };\n\n    useEffect(() => {\n        navigation?.items?.map((menu) => {\n            if (menu.type && menu.type === 'group') {\n                getCollapse(menu);\n            }\n            return false;\n        });\n    });\n\n    // item separator\n    const SeparatorIcon = separator;\n    const separatorIcon = separator ? <SeparatorIcon stroke={1.5} size=\"1rem\" /> : <IconTallymark1 stroke={1.5} size=\"1rem\" />;\n\n    let mainContent;\n    let itemContent;\n    let breadcrumbContent = <Typography />;\n    let itemTitle = '';\n    let CollapseIcon;\n    let ItemIcon;\n\n    // collapse item\n    if (main && main.type === 'collapse') {\n        CollapseIcon = main.icon ? main.icon : AccountTreeTwoToneIcon;\n        mainContent = (\n            <Typography component={Link} to=\"#\" variant=\"subtitle1\" sx={linkSX}>\n                {icons && <CollapseIcon style={iconStyle} />}\n                {main.title}\n            </Typography>\n        );\n    }\n\n    // items\n    if (item && item.type === 'item') {\n        itemTitle = item.title;\n\n        ItemIcon = item.icon ? item.icon : AccountTreeTwoToneIcon;\n        itemContent = (\n            <Typography\n                variant=\"subtitle1\"\n                sx={{\n                    display: 'flex',\n                    textDecoration: 'none',\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    color: 'grey.500'\n                }}\n            >\n                {icons && <ItemIcon style={iconStyle} />}\n                {itemTitle}\n            </Typography>\n        );\n\n        // main\n        if (item.breadcrumbs !== false) {\n            breadcrumbContent = (\n                <Card\n                    sx={{\n                        marginBottom: card === false ? 0 : theme.spacing(gridSpacing),\n                        border: card === false ? 'none' : '1px solid',\n                        borderColor: theme.palette.primary[200] + 75,\n                        background: card === false ? 'transparent' : theme.palette.background.default\n                    }}\n                    {...others}\n                >\n                    <Box sx={{ p: 2, pl: card === false ? 0 : 2 }}>\n                        <Grid\n                            container\n                            direction={rightAlign ? 'row' : 'column'}\n                            justifyContent={rightAlign ? 'space-between' : 'flex-start'}\n                            alignItems={rightAlign ? 'center' : 'flex-start'}\n                            spacing={1}\n                        >\n                            {title && !titleBottom && (\n                                <Grid item>\n                                    <Typography variant=\"h3\" sx={{ fontWeight: 500 }}>\n                                        {item.title}\n                                    </Typography>\n                                </Grid>\n                            )}\n                            <Grid item>\n                                <MuiBreadcrumbs\n                                    sx={{ '& .MuiBreadcrumbs-separator': { width: 16, ml: 1.25, mr: 1.25 } }}\n                                    aria-label=\"breadcrumb\"\n                                    maxItems={maxItems || 8}\n                                    separator={separatorIcon}\n                                >\n                                    <Typography component={Link} to=\"/\" color=\"inherit\" variant=\"subtitle1\" sx={linkSX}>\n                                        {icons && <HomeTwoToneIcon sx={iconStyle} />}\n                                        {icon && <HomeIcon sx={{ ...iconStyle, mr: 0 }} />}\n                                        {!icon && 'Dashboard'}\n                                    </Typography>\n                                    {mainContent}\n                                    {itemContent}\n                                </MuiBreadcrumbs>\n                            </Grid>\n                            {title && titleBottom && (\n                                <Grid item>\n                                    <Typography variant=\"h3\" sx={{ fontWeight: 500 }}>\n                                        {item.title}\n                                    </Typography>\n                                </Grid>\n                            )}\n                        </Grid>\n                    </Box>\n                    {card === false && divider !== false && <Divider sx={{ borderColor: theme.palette.primary.main, mb: gridSpacing }} />}\n                </Card>\n            );\n        }\n    }\n\n    return breadcrumbContent;\n};\n\nBreadcrumbs.propTypes = {\n    card: PropTypes.bool,\n    divider: PropTypes.bool,\n    icon: PropTypes.bool,\n    icons: PropTypes.bool,\n    maxItems: PropTypes.number,\n    navigation: PropTypes.object,\n    rightAlign: PropTypes.bool,\n    separator: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    title: PropTypes.bool,\n    titleBottom: PropTypes.bool\n};\n\nexport default Breadcrumbs;\n"]},"metadata":{},"sourceType":"module"}