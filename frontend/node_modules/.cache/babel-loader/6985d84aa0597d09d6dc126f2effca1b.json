{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onClick\", \"onTouchStart\"];\nimport * as React from 'react';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { useForkRef, useEventCallback, ownerDocument } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PickersPopperRoot = styled(Popper, {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst PickersPopperPaper = styled(Paper, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  transformOrigin: 'top center',\n  outline: 0\n}, ownerState.placement === 'top' && {\n  transformOrigin: 'bottom center'\n}));\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param onClickAway\n * @param onClick\n * @param onTouchStart\n */\n\n\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    } // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n\n\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    } // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n\n\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!nodeRef.current || // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway); // cleanup `handleClickAway`\n\n        syntheticEventRef.current = false;\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\n\nconst PickersPopper = props => {\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    onClose,\n    open,\n    PopperProps,\n    role,\n    TransitionComponent = Grow,\n    TrapFocusProps,\n    PaperProps = {}\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onClose);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n\n  const {\n    onClick: onPaperClickProp,\n    onTouchStart: onPaperTouchStartProp\n  } = PaperProps,\n        otherPaperProps = _objectWithoutPropertiesLoose(PaperProps, _excluded);\n\n  return /*#__PURE__*/_jsx(PickersPopperRoot, _extends({\n    transition: true,\n    role: role,\n    open: open,\n    anchorEl: anchorEl,\n    ownerState: ownerState\n  }, PopperProps, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(TrapFocus, _extends({\n      open: open,\n      disableAutoFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: () => true\n    }, TrapFocusProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({}, TransitionProps, {\n        children: /*#__PURE__*/_jsx(PickersPopperPaper, _extends({\n          tabIndex: -1,\n          elevation: 8,\n          ref: handlePaperRef,\n          onClick: event => {\n            onPaperClick(event);\n\n            if (onPaperClickProp) {\n              onPaperClickProp(event);\n            }\n          },\n          onTouchStart: event => {\n            onPaperTouchStart(event);\n\n            if (onPaperTouchStartProp) {\n              onPaperTouchStartProp(event);\n            }\n          },\n          ownerState: _extends({}, ownerState, {\n            placement\n          })\n        }, otherPaperProps, {\n          children: children\n        }))\n      }))\n    }))\n  }));\n};\n\nexport default PickersPopper;","map":{"version":3,"sources":["/home/rgargvanshu/DASS_Project/frontend/node_modules/@mui/lab/internal/pickers/PickersPopper.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","Grow","Paper","Popper","TrapFocus","useForkRef","useEventCallback","ownerDocument","styled","jsx","_jsx","PickersPopperRoot","skipSx","theme","zIndex","modal","PickersPopperPaper","ownerState","transformOrigin","outline","placement","clickedRootScrollbar","event","doc","documentElement","clientWidth","clientX","clientHeight","clientY","useClickAwayListener","active","onClickAway","movedRef","useRef","syntheticEventRef","nodeRef","activatedRef","useEffect","undefined","armClickAwayListener","current","document","addEventListener","removeEventListener","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","contains","target","handleSynthetic","handleTouchMove","PickersPopper","props","anchorEl","children","containerRef","onClose","open","PopperProps","role","TransitionComponent","TrapFocusProps","PaperProps","handleKeyDown","nativeEvent","key","lastFocusedElementRef","activeElement","HTMLElement","focus","clickAwayRef","onPaperClick","onPaperTouchStart","paperRef","handleRef","handlePaperRef","onClick","onPaperClickProp","onTouchStart","onPaperTouchStartProp","otherPaperProps","transition","TransitionProps","disableAutoFocus","disableEnforceFocus","isEnabled","tabIndex","elevation","ref"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onClick\", \"onTouchStart\"];\nimport * as React from 'react';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { useForkRef, useEventCallback, ownerDocument } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PickersPopperRoot = styled(Popper, {\n  skipSx: true\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst PickersPopperPaper = styled(Paper, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  transformOrigin: 'top center',\n  outline: 0\n}, ownerState.placement === 'top' && {\n  transformOrigin: 'bottom center'\n}));\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param onClickAway\n * @param onClick\n * @param onTouchStart\n */\n\n\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    } // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n\n\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    } // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n\n\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!nodeRef.current || // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway); // cleanup `handleClickAway`\n\n        syntheticEventRef.current = false;\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\n\nconst PickersPopper = props => {\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    onClose,\n    open,\n    PopperProps,\n    role,\n    TransitionComponent = Grow,\n    TrapFocusProps,\n    PaperProps = {}\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onClose);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n\n  const {\n    onClick: onPaperClickProp,\n    onTouchStart: onPaperTouchStartProp\n  } = PaperProps,\n        otherPaperProps = _objectWithoutPropertiesLoose(PaperProps, _excluded);\n\n  return /*#__PURE__*/_jsx(PickersPopperRoot, _extends({\n    transition: true,\n    role: role,\n    open: open,\n    anchorEl: anchorEl,\n    ownerState: ownerState\n  }, PopperProps, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(TrapFocus, _extends({\n      open: open,\n      disableAutoFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: () => true\n    }, TrapFocusProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({}, TransitionProps, {\n        children: /*#__PURE__*/_jsx(PickersPopperPaper, _extends({\n          tabIndex: -1,\n          elevation: 8,\n          ref: handlePaperRef,\n          onClick: event => {\n            onPaperClick(event);\n\n            if (onPaperClickProp) {\n              onPaperClickProp(event);\n            }\n          },\n          onTouchStart: event => {\n            onPaperTouchStart(event);\n\n            if (onPaperTouchStartProp) {\n              onPaperTouchStartProp(event);\n            }\n          },\n          ownerState: _extends({}, ownerState, {\n            placement\n          })\n        }, otherPaperProps, {\n          children: children\n        }))\n      }))\n    }))\n  }));\n};\n\nexport default PickersPopper;"]},"metadata":{},"sourceType":"module"}