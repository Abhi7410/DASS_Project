{"ast":null,"code":"var _jsxFileName = \"/home/rgargvanshu/DASS_Project/frontend/src/ui-component/cards/MainCard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react'; // material-ui\n\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material'; // constant\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerSX = {\n  '& .MuiCardHeader-action': {\n    mr: 0\n  }\n}; // ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = /*#__PURE__*/forwardRef(_c = _s(({\n  border = true,\n  boxShadow,\n  children,\n  content = true,\n  contentClass = '',\n  contentSX = {},\n  darkTitle,\n  secondary,\n  shadow,\n  sx = {},\n  title,\n  ...others\n}, ref) => {\n  _s();\n\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    ref: ref,\n    ...others,\n    sx: {\n      border: border ? '1px solid' : 'none',\n      borderColor: theme.palette.primary[200] + 75,\n      ':hover': {\n        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n      },\n      ...sx\n    },\n    children: [!darkTitle && title && /*#__PURE__*/_jsxDEV(CardHeader, {\n      titleTypographyProps: {\n        variant: 'h1',\n        fontSize: '5rem'\n      },\n      sx: headerSX,\n      title: title,\n      action: secondary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this), darkTitle && title && /*#__PURE__*/_jsxDEV(CardHeader, {\n      sx: headerSX,\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 54\n      }, this),\n      action: secondary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this), title && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this), content && /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: contentSX,\n      className: contentClass,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }, this), !content && children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this);\n}, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n}));\n_c2 = MainCard;\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\nexport default MainCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MainCard$forwardRef\");\n$RefreshReg$(_c2, \"MainCard\");","map":{"version":3,"sources":["/home/rgargvanshu/DASS_Project/frontend/src/ui-component/cards/MainCard.js"],"names":["PropTypes","forwardRef","useTheme","Card","CardContent","CardHeader","Divider","Typography","headerSX","mr","MainCard","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","ref","theme","borderColor","palette","primary","variant","fontSize","propTypes","bool","node","string","object","oneOfType"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 75,\n                    ':hover': {\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {!darkTitle && title && (\n                    <CardHeader titleTypographyProps={{ variant: 'h1', fontSize: '5rem' }} sx={headerSX} title={title} action={secondary} />\n                )}\n                {darkTitle && title && (\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\n                )}\n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n"]},"metadata":{},"sourceType":"module"}